# This file contains common pin mappings for MKS Robin E3 boards. To
# use this config, the firmware should be compiled for the STM32F103.
# When running "make menuconfig", enable "extra low-level
# configuration setup", select the 20KiB bootloader, and serial (on
# USART1 PA10/PA9) communication.

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_e3.bin
# Copy the file out/Robin_e3.bin to an SD card and then restart the
# printer with that SD card.

# MKS Robin E3 has onboard TMC2209. This config can also be used for
# MKS Robin E3D if equipped with TMC2209 stepper drivers.

# See docs/Config_Reference.md for a description of parameters.
[include mainsail.cfg]

#MACROS

[gcode_macro G420]
gcode:
  BED_MESH_PROFILE LOAD=default

[exclude_object]

[filament_switch_sensor my_sensor]
switch_pin: PB10

###########################
#Accelerometer

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # an example

[input_shaper]
shaper_freq_x: 46.8
shaper_freq_y: 23
shaper_type: mzv

# shaper_freq_x: 84
# shaper_freq_y: 48
# shaper_type: 3hump_ei

###########################

[stepper_x]
step_pin: PC0##
dir_pin: PB2##
enable_pin: !PC13##
microsteps: 16##
rotation_distance: 32.05333##
endstop_pin: ^PA12##
position_endstop: 0##
position_max: 300##
homing_speed: 40#

[stepper_y]
step_pin: PC2##
dir_pin: PB9##
enable_pin: !PB12##
microsteps: 16##
rotation_distance: 32.34133##
endstop_pin: ^PA11##
position_endstop: 0##
position_max: 300##
homing_speed: 30#

[stepper_z]
step_pin: PC14##
dir_pin: !PC15##
enable_pin: !PB8##
microsteps: 16##
rotation_distance: 8##
endstop_pin: probe:z_virtual_endstop##
position_min: -6.0##
position_max: 310##
homing_speed: 10#
second_homing_speed: 2#
homing_retract_dist: 2.0##

[tmc2209 stepper_x]
uart_pin: PC7##
run_current: 0.800##
hold_current: 0.500##
stealthchop_threshold: 999999##

[tmc2209 stepper_y]
uart_pin: PD2##
run_current: 0.800##
hold_current: 0.500##
stealthchop_threshold: 999999##

[tmc2209 stepper_z]
uart_pin: PC12##
run_current: 0.650##
hold_current: 0.450##
stealthchop_threshold: 999999##

[tmc2209 extruder]
uart_pin: PC11##
run_current: 0.800##
hold_current: 0.500##
stealthchop_threshold: 999999##

[extruder]
step_pin: PB4##
dir_pin: !PB3##
enable_pin: !PB5##
microsteps: 16##
rotation_distance: 33.05#
nozzle_diameter: 0.400##
filament_diameter: 1.750##
heater_pin: PC9##
sensor_type: EPCOS 100K B57560G104F##
sensor_pin: PA0##
#control: pid##
#pid_Kp: 29.5##
#pid_Ki: 3.24##
#pid_Kd: 67.3##
min_temp: 0##
max_temp: 250##
min_extrude_temp = 0
pressure_advance = 0.175

[verify_heater extruder]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time:40
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


[mcu]
#serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0#
baud: 112500##
restart_method: command##

[printer]
kinematics: cartesian##
max_velocity: 120##
max_accel: 10000##
max_accel_to_decel: 10000
max_z_velocity: 10##
max_z_accel: 20##

# EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
    EXP1_2=PC3, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the MKS Lcd Config path file for definitions of common LCD displays.

# [display]
# lcd_type: st7920#
# cs_pin: EXP1_4#
# sclk_pin: EXP1_5#
# sid_pin: EXP1_3#
# encoder_pins: ^EXP2_5, ^EXP2_3#
# click_pin: ^!EXP1_2#

# [output_pin beeper]
# pin: EXP1_1#


[fan]
pin: PA8##

[heater_bed]
heater_pin: PC8##
sensor_pin: PA1##
sensor_type: EPCOS 100K B57560G104F##
#control: pid##
#pid_Kp: 34.1##
#pid_Ki: 4.1##
#pid_Kd: 189.3##
min_temp: 0##
max_temp: 100##

[bltouch]
sensor_pin: ^PC6##
control_pin: PA3##
x_offset: -41.5##
y_offset: -13##
#z_offset: 0.0##
samples: 2##
probe_with_touch_mode: true##

[bed_mesh]
speed: 120##
horizontal_move_z: 8
mesh_min: 10, 10##
mesh_max: 258.5, 287##
probe_count: 6,6##
algorithm: bicubic##

[safe_z_home]
home_xy_position: 175, 175##
speed: 75##
z_hop: 10##
z_hop_speed: 5##

[pause_resume]
recover_velocity: 25##

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 4.140
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.581
#*# pid_ki = 1.821
#*# pid_kd = 104.464
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.031
#*# pid_ki = 2.182
#*# pid_kd = 310.238
#*#
#*# [bed_mesh Marc's Maker 8 March 2025]
#*# version = 1
#*# points =
#*# 	0.016250, -0.140000, 0.121250, -0.006250, -0.217500, 0.145000
#*# 	0.046250, -0.172500, 0.035000, -0.042500, -0.250000, 0.151250
#*# 	0.090000, -0.175000, -0.027500, -0.087500, -0.282500, 0.118750
#*# 	0.142500, -0.165000, -0.033750, -0.056250, -0.243750, 0.136250
#*# 	0.047500, -0.287500, -0.162500, -0.156250, -0.335000, 0.030000
#*# 	-0.005000, -0.351250, -0.257500, -0.230000, -0.430000, -0.065000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 258.5
#*# min_y = 10.0
#*# max_y = 287.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.015000, -0.147500, 0.123750, 0.007500, -0.196250, 0.187500
#*# 	0.046250, -0.181250, 0.032500, -0.037500, -0.231250, 0.175000
#*# 	0.083750, -0.185000, -0.027500, -0.071250, -0.263750, 0.152500
#*# 	0.152500, -0.152500, -0.015000, -0.032500, -0.205000, 0.185000
#*# 	0.075000, -0.263750, -0.132500, -0.113750, -0.278750, 0.110000
#*# 	0.043750, -0.308750, -0.210000, -0.158750, -0.342500, 0.047500
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 258.5
#*# min_y = 10.0
#*# max_y = 287.0
